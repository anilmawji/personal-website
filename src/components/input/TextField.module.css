:root {
  --tf-text-color: rgba(108, 250, 132, 0.8);
  --tf-error-color: rgb(255, 65, 65);
  --tf-transition: 200ms ease;
}

.filled {
  position: relative;
}

.filled input {
  width: 100%;
  height: 100%;
  font-size: 16px;
  outline: none;
  border: none;
  padding-top: 24px;
  padding-left: 10px;
  padding-bottom: 10px;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
  border-bottom: 2px solid #4f4f4f;
  background: var(--main-bg-color);
  color: white;
  caret-color: white;
}

.filled label {
  position: absolute;
  bottom: 10px;
  left: 0;
  padding-left: 14px;
  padding-bottom: 8px;
  color: grey;
  pointer-events: none;
  transition: all var(--tf-transition);
}

.filled input:focus ~ label,
.filled input:valid ~ label,
.filled input:not(:placeholder-shown):invalid ~ label {
  transform: translateY(-1em);
  font-size: 12px;
  padding-left: 10px;
  padding-bottom: 12px;
}

.filled input:focus ~ label {
  color: var(--tf-text-color);
}

.filled .underline {
  position: absolute;
  width: 100%;
  height: 1px;
  bottom: 0;
}

.filled .underline::before {
  position: absolute;
  content: "";
  width: 100%;
  height: 100%;
  background: var(--tf-text-color);
  transform: scaleX(0);
  transition: transform var(--tf-transition);
}

.filled input:focus ~ .underline::before {
  transform: scaleX(1);
}

/* Hack to get rid of ugly autofill styling (put a crazy long timer before showing the background color) */
.filled input:-webkit-autofill,
.filled input:-webkit-autofill:hover,
.filled input:-webkit-autofill:focus {
  -webkit-text-fill-color: white;
  transition: background-color 999999s ease-in-out 0s;
}

/* Show error color when input is invalid and the placeholder is no longer displayed */
.filled input:not(:placeholder-shown):invalid ~ .underline::before {
  background: var(--tf-error-color);
  transform: scaleX(1);
}

.filled input:not(:placeholder-shown):invalid ~ label {
  color: var(--tf-error-color);
}

/* Avoid showing error color while user is still typing */
.filled input:focus:invalid ~ .underline::before  {
  background: var(--tf-text-color);
  transform: scaleX(1);
}

.filled input:focus:invalid ~ label  {
  color: var(--tf-text-color);
}